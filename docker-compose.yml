version: '3.8'

services:
  backend:
    container_name: gestor-academico-backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:80"
    volumes:
      - ./backend:/var/www/html
      - /var/www/html/vendor
    environment:
      - APP_ENV=dev
      - DB_HOST=database
      - DB_PORT=3306
      - DB_USER=user
      - DB_PASSWORD=password
      - DB_NAME=gestor_academico
    depends_on:
      - database
    restart: always

  frontend:
    container_name: gestor-academico-frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    stdin_open: true
    tty: true
    command: npm run dev

  database:
    container_name: gestor-academico-mysql
    image: mysql:8
    environment:
      MYSQL_DATABASE: gestor_academico
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: root
      MYSQL_CHARSET: utf8mb4
    ports:
      - "3306:3306"
    volumes:
      - dbdata:/var/lib/mysql
      - ./sql:/docker-entrypoint-initdb.d
    restart: always

  phpmyadmin:
    container_name: gestor-academico-phpmyadmin
    image: phpmyadmin/phpmyadmin
    environment:
      PMA_HOST: database
      PMA_USER: root
      PMA_PASSWORD: root
    ports:
      - "8080:80"
    depends_on:
      - database

  nginx:
    container_name: gestor-academico-nginx
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend
      - frontend

  mailhog:
    container_name: gestor-academico-mailhog
    image: mailhog/mailhog
    ports:
      - "1025:1025"
      - "8025:8025"

volumes:
  dbdata: